import string
from pprint import pprint
import random

import pytest


def test_user_register(test_cli):
    params = {
        "id": "abc1234",
        "password": "abc1234",
        "email": "abc1234@gmail.com",
    }
    resp = test_cli.post("/user", json=params)
    assert resp.status_code == 201


def test_100000_users_register(test_cli):
    def id_generator(size=8, chars=string.ascii_uppercase + string.digits):
        return ''.join(random.choice(chars) for _ in range(size))

    for i in range(10000):
        params = {
            "id": id_generator(size=6),
            "password": '11111111',
            "email": f"{id_generator(size=10)}@gmail.com",
            "role": random.choice([1,2,3,4]),
            "nickname": random.choice([
       "Accidental",
       "Genius",
       "Hyper",
       "Pluto",
       "Alpha",
       "Jester",
       "Pogue",
       "Airport",
       "Hobo",
       "Jigsaw",
       "Prometheus",
       "Bearded",
       "Angler",
       "Jokers",
       "Grin",
       "Psycho",
       "Thinker",
       "Beetle",
       "King",
       "Judge",
       "Pusher",
       "Bitmap",
       "Junkyard",
       "Dog",
       "Riff",
       "Raff",
       "Blister",
       "K-9",
       "Roadblock",
       "Bowie",
       "Keystone",
       "Rooster",
       "Bowler",
       "Kickstart",
       "Sandbox",
       "Breadmaker",
       "Kill",
       "Switch",
       "Scrapper",
       "Broomspun",
       "Kingfisher",
       "Screwtape",
       "Buckshot",
       "Kitchen",
       "Sexual",
       "Chocolate",
       "Bugger",
       "Knuckles",
       "Shadow",
       "Chaser",
       "Cabbie",
       "Lady",
       "Killer",
       "Sherwood",
       "Gladiator",
       "Candy",
       "Butcher",
       "Liquid",
       "Science",
       "Shooter",
       "Capital",
       "F",
       "Little",
       "Cobra",
       "Sidewalk",
       "Enforcer",
       "Captain",
       "Peroxide",
       "Little",
       "General",
       "Skull",
       "Crusher",
       "Celtic",
       "Charger",
       "Lord",
       "Nikon",
       "Sky",
       "Bully",
       "Cereal",
       "Killer",
       "Lord",
       "Pistachio",
       "Slow",
       "Trot",
       "Chicago",
       "Blackout",
       "Mad",
       "Irishman",
       "Snake",
       "Eyes",
       "Chocolate",
       "Thunder",
       "Mad",
       "Jack",
       "Snow",
       "Hound",
       "Chuckles",
       "Mad",
       "Rascal",
       "Sofa",
       "King",
       "Commando",
       "Manimal",
       "Speedwell",
       "Cool",
       "Whip",
       "Marbles",
       "Spider",
       "Fuji",
       "Cosmo",
       "Married",
       "Man",
       "Springheel",
       "Jack",
       "Crash",
       "Override",
       "Marshmallow",
       "Squatch",
       "Crash",
       "Test",
       "Mental",
       "Stacker",
       "of",
       "Wheat",
       "Crazy",
       "Eights",
       "Mercury",
       "Reborn",
       "Sugar",
       "Man",
       "Criss",
       "Cross",
       "Midas",
       "Suicide",
       "Jockey",
       "Cross",
       "Thread",
       "Midnight",
       "Rambler",
       "Swampmasher",
       "Cujo",
       "Midnight",
       "Rider",
       "Swerve",
       "Dancing",
       "Madman",
       "Mindless",
       "Bobcat",
       "Tacklebox",
       "Dangle",
       "Mr.",
       "Take",
       "Away",
       "Dark",
       "Horse",
       "Fabulous",
       "Tan",
       "Stallion",
       "Day",
       "Hawk",
       "Mr.",
       "Gadget",
       "The",
       "China",
       "Wall",
       "Desert",
       "Haze",
       "Mr.",
       "Lucky",
       "The",
       "Dude",
       "Digger",
       "Mr.",
       "Peppermint",
       "The",
       "Flying",
       "Mouse",
       "Disco",
       "Thunder",
       "Mr.",
       "Spy",
       "The",
       "Happy",
       "Jock",
       "Disco",
       "Potato",
       "Mr.",
       "Thanksgiving",
       "The",
       "Howling",
       "Swede",
       "Dr.",
       "Cocktail",
       "Mr.",
       "Wholesome",
       "Thrasher",
       "Dredd",
       "Mud",
       "Pie",
       "Man",
       "Toe",
       "Dropkick",
       "Mule",
       "Skinner",
       "Toolmaker",
       "Drop",
       "Stone",
       "Murmur",
       "Tough",
       "Nut",
       "Drugstore",
       "Cowboy",
       "Nacho",
       "Trip",
       "Easy",
       "Sweep",
       "Natural",
       "Mess",
       "Troubadour",
       "Electric",
       "Player",
       "Necromancer",
       "Turnip",
       "King",
       "Esquire",
       "Neophyte",
       "Believer",
       "Twitch",
       "Fast",
       "Draw",
       "Nessie",
       "Vagabond",
       "Warrior",
       "Flakes",
       "New",
       "Cycle",
       "Voluntary",
       "Flint",
       "Nickname",
       "Master",
       "Vortex",
       "Freak",
       "Nightmare",
       "King",
       "Washer",
       "Gas",
       "Man",
       "Night",
       "Train",
       "Waylay",
       "Dave",
       "Glyph",
       "Old",
       "Man",
       "Winter",
       "Wheels",
       "Grave",
       "Digger",
       "Old",
       "Orange",
       "Eyes",
       "Wooden",
       "Man",
       "Guillotine",
       "Old",
       "Regret",
       "Woo",
       "Woo",
       "Gunhawk",
       "Onion",
       "King",
       "Yellow",
       "Menace",
       "High",
       "Kingdom",
       "Warrior",
       "Osprey",
       "Zero",
       "Charisma",
       "Highlander",
       "Monk",
       "Overrun",
       "Zesty",
       "Dragon"
    ]),
            "description": random.choice(['안녕하세요!',
                                          '반갑습니다',
                                          'Hello there!',
                                          '최고의 경험을 선사합니다. 10년차 호스트입니다.',
                                          '최고의 경험을 선사합니다 1년차 호스트입니다. ',
                                          '최고의 경험을 선사합니다 2년차 호스트입니다.',
                                          '최고의 경험을 선사합니다 3년차 호스트입니다.',
                                          '최고의 경험을 선사합니다 4년차 호스트입니다.',
                                          '최고의 경험을 선사합니다 5년차 호스트입니다.',
                                          '최고의 경험을 선사합니다 6년차 호스트입니다.',
                                          '최고의 경험을 선사합니다 7년차 호스트입니다.',
                                          '최고의 경험을 선사합니다 8년차 호스트입니다.',
                                          '최고의 경험을 선사합니다 9년차 호스트입니다.',
                                          '쾌적한 숙소를 제공합니다',
                                          '게스트님의 만족을 최우선으로 제공합니다.',
                                          '어서 오세요! 언제나 환영합니다',
                                          '안락한 공간을 제공합니다.',
                                          'Our Service always has been good. Welcome',
                                          '근방에 관광명소가 있는 숙소입니다.',
                                          '숙소를 찾고계세요?! 저희 숙소는 최고의 서비스를 제공할것을 약속합니다!',
                                          'you are lookging for room? we provide best service!',
                                          '서두르세요! 고객님을 위한 숙소가 준비되어있습니다!',
                                          '저희 숙소는 30년간 최고의 경험을 선사한 숙소입니다.',
                                          '게스트와의 의사소통을 최우선으로 생각합니다.']),
            "sex": random.choice(['M','W'])
        }
        test_cli.post("/user", json=params)


@pytest.fixture
def test_user_login(test_cli):
    params = {
        "id": "abc123",
        "password": "abc123",
        "email": "abc123",
    }
    resp = test_cli.post("/user/login", json=params)
    assert resp.status_code == 200
    result = resp.json
    return result["access_token"]


def test_user_logout(test_cli, test_user_login):
    headers = {"Authorization": f"Bearer {test_user_login}"}
    resp = test_cli.post("/user/logout", headers=headers)
    assert resp.status_code == 200


def test_user_profile_update(test_cli, test_user_login):
    dat = {
        "birthday": "1991-01-02",
        "email": "abc@gmail.com",
        "location": "테헤란로12-1",
        "nickname": "소담",
        "phone_number": "01012345667",
        "sex": "W",
    }
    headers = {"Authorization": f"Bearer {test_user_login}"}
    resp = test_cli.patch("/user/1", json=dat, headers=headers)
    assert resp.status_code == 200


def test_user_me(test_cli, test_user_login):
    headers = {"Authorization": f"Bearer {test_user_login}"}
    resp = test_cli.get("/user/me", headers=headers)
    pprint(resp.json)
    assert resp.status_code == 200


def test_user_others_info(test_cli, test_user_login):
    headers = {"Authorization": f"Bearer {test_user_login}"}
    resp = test_cli.get("/user/2", headers=headers)
    pprint(resp.json)
    assert resp.status_code == 200



